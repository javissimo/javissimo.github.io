---
import { marked } from 'marked';
import { Image } from 'astro:assets';
import Button from './Button.astro';
import siteConfig from '../data/site-config';

interface Action {
    href: string;
    text: string;
}

interface HeroImage {
    src: string;
    alt?: string;
    caption?: string;
}

interface HeroProps {
    title?: string;
    image?: HeroImage;
    text?: string;
    actions?: Action[];
}

const { title, image, text, actions = [] }: HeroProps = siteConfig.hero || {};

const parsedText = text ? marked.parse(text) : '';

const hasContent = title || image?.src || text || actions.length > 0;
---

{
    hasContent && (
        <section class="w-full flex flex-col gap-8 mb-16 sm:mb-24">
            {title && <h1 class="text-3xl leading-tight font-serif font-medium sm:text-5xl sm:leading-tight">{title}</h1>}

            {image?.src && (
                <figure class="flex flex-col items-center">
                    <Image class="size-48 rounded-full object-cover" src={image.src} alt={image.alt || ''} width={192} height={192} loading="eager" />
                    {image.caption && <figcaption class="mt-1.5 text-xs sm:text-sm">{image.caption}</figcaption>}
                </figure>
            )}

            {parsedText && <div class="max-w-none prose prose-dante sm:prose-lg text-center" set:html={parsedText} />}

            {actions.length > 0 && (
                <div class="flex flex-wrap gap-4 justify-center">
                    {actions.map(({ href, text }) => (
                        <Button href={href}>{text}</Button>
                    ))}
                </div>
            )}
        </section>
    )
}
